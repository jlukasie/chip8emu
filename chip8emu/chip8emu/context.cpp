#include "context.h"
#include <string.h>

static unsigned char Chip8Font[80] =
{ 
	0xF0, 0x90, 0x90, 0x90, 0xF0, // 0
	0x20, 0x60, 0x20, 0x20, 0x70, // 1
	0xF0, 0x10, 0xF0, 0x80, 0xF0, // 2
	0xF0, 0x10, 0xF0, 0x10, 0xF0, // 3
	0x90, 0x90, 0xF0, 0x10, 0x10, // 4
	0xF0, 0x80, 0xF0, 0x10, 0xF0, // 5
	0xF0, 0x80, 0xF0, 0x90, 0xF0, // 6
	0xF0, 0x10, 0x20, 0x40, 0x40, // 7
	0xF0, 0x90, 0xF0, 0x90, 0xF0, // 8
	0xF0, 0x90, 0xF0, 0x10, 0xF0, // 9
	0xF0, 0x90, 0xF0, 0x90, 0x90, // A
	0xE0, 0x90, 0xE0, 0x90, 0xE0, // B
	0xF0, 0x80, 0x80, 0x80, 0xF0, // C
	0xE0, 0x90, 0x90, 0x90, 0xE0, // D
	0xF0, 0x80, 0xF0, 0x80, 0xF0, // E
	0xF0, 0x80, 0xF0, 0x80, 0x80  // F
};

Context::Context()
{
	mem = new unsigned char[0xfff];
	for (int i = 0; i < 0xfff; ++i)
		mem[i] = 0;

	//load char sprites into memory
	memcpy(mem, Chip8Font, 80);
	
	registerfile = new char[16];
	for (int i = 0; i < 16; ++i)
		registerfile[i] = 0;

	stack = new unsigned short[16];
	for (int i = 0; i < 16; ++i)
		stack[i] = 0;

	keys = new bool[16];
	for (int i = 0; i < 16; ++i)
		keys[i] = false;

	instruction = 512; //always start at 0x200
	stack_pos = 0;

}

Context::~Context()
{
	delete [] registerfile;
	delete [] stack;
	delete [] keys;
	delete [] mem;
}

int Context::increment_instruction()
{
	codereg = mem[instruction++] << 8;
	codereg |= mem[instruction++];
	return instruction;
}